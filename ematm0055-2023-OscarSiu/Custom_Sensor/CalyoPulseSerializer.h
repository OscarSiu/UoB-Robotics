// LibCarla/source/carla/sensor/s11n/SafeDistanceSerializer.h

// DONE

#pragma once

#include "carla/Debug.h"
#include "carla/Memory.h"
#include "carla/sensor/RawData.h"
#include "carla/sensor/data/CalyoPulseData.h"

#include <cstdint>
#include <cstring>

namespace carla {
namespace sensor {

  class SensorData;

namespace s11n {

  // ===========================================================================
  // -- Calyo Sensor Serializer ------------------------------------------------
  // ===========================================================================
  
  /// Serializes the data generated by Radar sensors.
  class CalyoPulseSerializer {
  public:

    template <typename Sensor>
    static Buffer Serialize(
        const Sensor &sensor,
        const data::CalyoPulseData &measurement,
        Buffer &&output);

    static SharedPtr<SensorData> Deserialize(RawData &&data);
  };

    template <typename Sensor>
    inline Buffer CalyoPulseSerializer::Serialize(
        const Sensor &,
        const data::CalyoPulseData &measurement,
        Buffer &&output) {

      output.copy_from(measurement._detections);
      return std::move(output);
  }
    
} // namespace s11n
} // namespace sensor
} // namespace carla